name: Publish Website to CPanel
on:
  push:
    branches:
      - main

jobs:
  FTP-Deploy-Action:
    name: FTP-Deploy-Action
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Instalar Node.js 20
      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Paso 2: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # Paso 3: Instalar dependencias de Node.js y compilar activos
      - name: Build assets
        run: npm install && npm run build

      # Paso 4: Instalar PHP y Composer
      - name: Install PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' # Ajusta a la versión de PHP usada en tu proyecto Laravel
          tools: 'composer'

      # Paso 5: Instalar dependencias PHP
      - name: Install PHP dependencies
        run: composer install --optimize-autoloader

      # Paso 6: Diagnosticar conexión FTP antes del despliegue
      - name: Diagnose FTP connection
        run: |
          echo "=== DIAGNÓSTICO FTP ==="
          echo "Servidor: ${{ secrets.FTP_SERVER }}"
          echo "Usuario: ${{ secrets.FTP_USERNAME }}"
          echo "Contraseña: [OCULTA]"
          echo ""
          echo "Probando conectividad..."
          timeout 10 bash -c "</dev/tcp/${{ secrets.FTP_SERVER }}/21" && echo "✅ Puerto 21 accesible" || echo "❌ Puerto 21 NO accesible"
          timeout 10 bash -c "</dev/tcp/${{ secrets.FTP_SERVER }}/22" && echo "✅ Puerto 22 accesible" || echo "❌ Puerto 22 NO accesible"
          timeout 10 bash -c "</dev/tcp/${{ secrets.FTP_SERVER }}/990" && echo "✅ Puerto 990 accesible" || echo "❌ Puerto 990 NO accesible"
          echo ""
          echo "Probando resolución DNS..."
          nslookup ${{ secrets.FTP_SERVER }} || echo "❌ Error en resolución DNS"

      # Paso 7: Desplegar archivos por FTP (configuración básica para servidor compartido)
      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftp
          port: 21
          log-level: verbose
          timeout: 30000
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/tests/**
            **/storage/logs/**
            **/storage/framework/cache/**
            **/storage/framework/sessions/**
            **/storage/framework/views/**

      # Paso 8: Configurar el archivo .env desde los secretos
      - name: Setup environment file
        run: |
          echo "Setting up .env from secrets..."
          echo "${{ secrets.ENV_CONTENT }}" > .env
          cat .env # Para depurar y verificar el contenido del .env

      # Paso 9: Habilitar depuración de Laravel
      - name: Enable Laravel debug
        run: |
          echo "APP_DEBUG=true" >> .env
          sed -i 's/APP_DEBUG=.*/APP_DEBUG=true/' .env # Asegúrate de que APP_DEBUG sea true para ver los errores en el entorno de producción

      # Paso 10: Configurar permisos de directorios
      - name: Set directory permissions
        run: chmod -R 775 storage bootstrap/cache

      # Paso 11: Verificar si el archivo .env está cargado correctamente
      - name: Check .env setup
        run: |
          echo "Verifying .env configuration..."
          cat .env
          php artisan config:clear
          php artisan cache:clear
          php artisan config:cache
          php artisan storage:link

      # Paso 12: Verificar las variables de entorno en Laravel (opcional)
      - name: Test .env variables
        run: |
          curl https://zonix-imports.aiblockweb.com/api/env-test